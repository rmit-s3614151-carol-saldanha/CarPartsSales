@model PaginatedList<StoreInventory>

@{
    ViewBag.Title = "Car Sales";
}

<h2>Car Sales</h2>
<form asp-action="Customer" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Product Name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Customer">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Customer" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Product Name</a>
            </th>
            <th>
                <a asp-action="Customer" asp-route-sortOrder="@ViewData["StoreSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Store Name</a>
            </th>
            <th>
                Available
            </th>
            <th>
                Price
            </th>
              <th>
                Image
           </th>
            <th></th>
        </tr>
    </thead>
    <tbody>        
        @foreach(var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Store.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Price)
                </td>
                 <td>
                <img src="@Url.Content(item.Product.Image)" height="100" width="100" />
                </td>
            
            
                <td>
                    <button type="button" class="btn btn-default btn-sm">
                     <span class="glyphicon glyphicon-shopping-cart" onclick='window.location = "@Url.Action("Customer", "Customer")";'></span> Add to Cart
                     </button>
                </td>
             </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
@* The paging buttons are displayed by tag helpers *@
<a asp-action="Customer"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Customer"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
   Next
</a>
<style>
    .btn-default {
    color: beige;
    background-color: teal;
    border-color: #ccc;
}
</style>
